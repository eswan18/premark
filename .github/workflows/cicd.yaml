name: Test, Quality Check, and Publish

on:
  # When pushing to any branch, or when creating a new tag, e.g. to make a release.
  push:
    branches: '**'
    tags: '*'
  create:
    tags: '*'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Install Package
        run:
          pip install -e .[lint]
      - name: Run flake8
        run:
          python -m flake8 premark tests
  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install Package
      run:
        pip install -e .[typecheck]
    - name: Run mypy
      run:
        python -m mypy premark
  test:
    name: Test All
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install Package
        run:
          pip install -e .[test]
      - name: Run pytest and Generate Coverage Report
        run:
         pytest --cov premark --cov-report xml
      - name: Publish coverage
        if: github.ref == 'refs/heads/main'
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
          env_vars: PYTHON # Important because we're running tests for both 3.9 and 3.10
  publish-to-pypi:
    name: Publish to PyPI, if Needed
    needs: [lint, typecheck, test]
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Install Build and Deploy Tools
        run:
          pip install build twine
      - name: Build wheel and sdist
        run:
          python -m build
      - name: Publish Distribution to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          # In Test PyPI, we don't care about duplicate releases.
          skip_existing: true
      - name: Publish Distribution to PyPI
        # Only publish to *real* PyPI if this commit has a version (vX.X.X) tag.
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
